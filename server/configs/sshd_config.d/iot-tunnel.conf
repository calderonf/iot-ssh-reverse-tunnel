# /etc/ssh/sshd_config.d/iot-tunnel.conf

Port 22
ListenAddress 0.0.0.0
ListenAddress ::

PubkeyAuthentication yes
PasswordAuthentication no
ChallengeResponseAuthentication no
PermitEmptyPasswords no

StrictModes yes
PermitRootLogin no
MaxAuthTries 3
LoginGraceTime 2m
SyslogFacility AUTHPRIV
LogLevel VERBOSE
TCPKeepAlive yes

# Global pre-auth control
MaxStartups 100:30:200

# Algoritmos seguros compatibles con Azure, AWS, GCP y otras nubes
# Incluye Ed25519 (más seguro), ECDSA y RSA con SHA-2 (compatibilidad con claves generadas por defecto en clouds)
# IMPORTANTE: Excluye RSA con SHA-1 por vulnerabilidades de seguridad
PubkeyAcceptedAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,sk-ecdsa-sha2-nistp256@openssh.com,sk-ecdsa-sha2-nistp256-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com

# Opcional: limitar usuarios que pueden entrar
# AllowUsers iot-tunnel

Match User iot-tunnel
    PermitTTY no
    X11Forwarding no
    AllowAgentForwarding no

    # Solo túneles inversos (-R)
    AllowTcpForwarding remote

    # El cliente puede solicitar 0.0.0.0 para exposición pública
    GatewayPorts clientspecified

    # Lista de puertos explícitos autorizados (edita esta lista en el repo si necesitas más):
    PermitListen 10001
    PermitListen 10002
    PermitListen 10003

    ClientAliveInterval 30
    ClientAliveCountMax 3
    MaxSessions 100

    # Recomendado: validar puertos por script y/o authorized_keys
    # ForceCommand /usr/local/bin/tunnel-only.sh
